#lang racket
(require racket/gui/base)
(require "../Conexion.rtk")
(require db)

(require "../utilidades/CalcularCalendarioDeCitas.rkt")

(provide obtieneDatosMenor)
(provide existe-registro)
(provide registrarVacunacion)

(define (obtieneDatosMenor 
            registroCivil 
            nombresApellidos 
            fechaNacimiento 
            genero 
            nombreContacto 
            telefonoContacto 
            direccionContacto) 
            
  (verificar_datos conn  
  ;(query-exec conn insertarMenor 
                        registroCivil 
                        nombresApellidos 
                        fechaNacimiento 
                        nombreContacto 
                        telefonoContacto 
                        direccionContacto
                        genero))
                         



;   INSERTA LOS DATOS DEL MENOR EN LA BASE DE DATOS
(define insertarMenor (
                       prepare conn "INSERT INTO `paciente`(`idRegistroCivil`, `NombresApellidos`, `fechaNacimiento`, `NombreContacto`, `telefonoContacto`, `direccion`, `genero`) VALUES (?,?,?,?,?,?,?)"))



(define (verificar_datos conn registroCivil nombresApellidos fechaNacimiento 
                        nombreContacto telefonoContacto direccionContacto genero)
  (cond
    [(eqv? registroCivil "") "Campo Registro Civil vacio"]
    [(eqv? nombresApellidos "") "Campo Nombres y Apellidos vacio"]
    [(eqv? fechaNacimiento "") "Campo Fecha Nacimiento vacio"]
    [(eqv? nombreContacto "") "Campo Nombre (Padre/Madre) vacio"]
    [(eqv? telefonoContacto "") "Campo Telefono Contacto vacio"]
    [(eqv? direccionContacto "") "Campo Dirección Contacto vacio"]
    [(eqv? genero "") "Campo Género vacio"]
    [(cond
       [(existe-registro registroCivil)  "El Registro Civil ya existe!"]
       [else    (registrar-datos-menor 
                        registroCivil 
                        nombresApellidos 
                        fechaNacimiento 
                        nombreContacto 
                        telefonoContacto 
                        direccionContacto
                        genero ) "Menor registrado!"])]))
                         
;   VERIFICAR SI EL REGISTRO CIVIL YA EXISTE
(define verificarRegistroCivil (prepare conn "SELECT * FROM `paciente` WHERE `idRegistroCivil` = ?"))
(define (existe-registro regCivil)
  (not (equal? (query-maybe-row conn verificarRegistroCivil regCivil) #f))
)

(define (registrar-calendario-menor registroCivil calendario)
  (if (= (length calendario) 8)
    (registrar-calendario-menor-lista registroCivil calendario (range 1 9))
    (registrar-calendario-menor-lista registroCivil calendario (range 9 12))
  )
)

(define (registrar-calendario-menor-lista registroCivil calendario listIdEtapas)
(
  if (not (null? calendario))
    (begin
      ; (display (listIdEtapas))
      (query-exec conn insertarCalendarioMenor (car listIdEtapas) registroCivil (car calendario) (car calendario))
      (registrar-calendario-menor-lista registroCivil (cdr calendario) (cdr listIdEtapas))
    )
    "Fin ejecucion"
  )
)
(define (registrar-datos-menor registroCivil 
                        nombresApellidos 
                        fechaNacimiento 
                        nombreContacto 
                        telefonoContacto 
                        direccionContacto
                        genero )
(begin 
  (query-exec conn insertarMenor 
                        registroCivil 
                        nombresApellidos 
                        fechaNacimiento 
                        nombreContacto 
                        telefonoContacto 
                        direccionContacto
                        genero)
  (registrar-calendario-menor registroCivil (obtener-calendario fechaNacimiento))
                        )
)

(define (registrarVacunacion regCivil idEtapa fecha)
(begin
  (query-exec conn registrarFechaVacunacion fecha regCivil idEtapa)
  (query-exec conn actualizarDiscrepancias)
  #t
))


(define insertarCalendarioMenor (
                       prepare conn "INSERT INTO `pacienteetapa`(`IDETAPA`, `IDREGISTROCIVIL`, `FECHA`, `FECHAVACUNACION`) VALUES (?,?,?,?)"))

(define registrarFechaVacunacion (
                       prepare conn "UPDATE `pacienteetapa` SET `FECHAVACUNACION`= ?, `ESTADO`='Aplicada' WHERE pacienteetapa.IDREGISTROCIVIL = ? and pacienteetapa.IDETAPA = ?"))
(define actualizarDiscrepancias (
                       prepare conn "UPDATE `pacienteetapa` SET `discrepancia`= 'Discrepancia' WHERE `FECHA` <>`FECHAVACUNACION`"))
              
; (define consultarMenor (prepare conn "SELECT * FROM `paciente` WHERE `idRegistroCivil` = ?"))

; (query-rows conn "Select * from paciente")
; (query-rows conn "Select * from paciente")
